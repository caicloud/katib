apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
spec:
  replicas: 1
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
    spec:
      containers:
      - image: {{ include "common.images.image" (dict "context" $ "repository" .Values.platformConfig.imageRepositoryRelease "imageRoot" .Values.image) | quote }}
        imagePullPolicy: {{ default "Always" .Values.platformConfig.imagePullPolicy | quote }}
        name: {{ include "common.names.fullname" . }}
        command: 
          {{- range $.Values.command }}
          - {{ . | quote }}
          {{- end }}
        args:
          {{- range $.Values.args }}
          - {{ . | quote }}
          {{- end }}
        env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secretRef.name }}
                key: MYSQL_ROOT_PASSWORD
          - name: MYSQL_ALLOW_EMPTY_PASSWORD
            value: "true"
          - name: MYSQL_DATABASE
            value: "katib"
        ports:
        {{- if .Values.serverPort }}
        - name: {{ .Values.serverPort.name }}
          containerPort: {{ .Values.serverPort.port }}
        {{- end }}
        resources:
          limits:
            cpu: 500m
            memory: 800Mi
          requests:
            cpu: 200m
            memory: 500Mi
        volumeMounts:
          - name: katib-mysql
            mountPath: /var/lib/mysql
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe: {{- omit .Values.livenessProbe "enabled" | toYaml | nindent 10 }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe: {{- omit .Values.readinessProbe "enabled" | toYaml | nindent 10 }}
        {{- end }}
      volumes:
        - name: katib-mysql
          persistentVolumeClaim:
            claimName: {{ .Values.persistentVolumeClaim.name }}